# Used references from:
# - https://www.digitalocean.com/community/tools/nginx?domains.0.server.domain=wedding-manuele-robine.d3strukt0r.dev&domains.0.server.documentRoot=%2Fapp&domains.0.server.wwwSubdomain=true&domains.0.https.http3=true&domains.0.https.hstsPreload=true&domains.0.php.phpServer=%2Fvar%2Frun%2Fphp%2Fphp8.2-fpm.sock&domains.0.restrict.connectMethod=true&domains.0.onion.onionLocation=dwadawdwadwa.onion&global.https.ocspCloudflareType=both&global.https.ocspGoogleType=both&global.https.ocspOpenDnsType=both&global.security.referrerPolicy=strict-origin-when-cross-origin&global.security.serverTokens=true&global.security.limitReq=true&global.security.securityTxt=true&global.performance.brotliCompression=true&global.nginx.user=nginx&global.nginx.pid=%2Fvar%2Frun%2Fnginx.pid&global.nginx.clientMaxBodySize=100&global.docker.dockerfile=true&global.docker.dockerCompose=true&global.app.lang=de
# - https://developer.wordpress.org/advanced-administration/server/web-server/nginx/#global-restrictions-file

# Container already runs as nginx user, so no need to set it here
#user nginx {group};

# Set number of worker processes automatically based on number of CPU cores.
# https://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes auto;
worker_cpu_affinity auto;
# https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile
worker_rlimit_nofile 65535;

# Enables the use of JIT for regular expressions to speed-up their processing.
# https://nginx.org/en/docs/ngx_core_module.html#pcre_jit
pcre_jit on;

# Configures default error logger. [ debug | info | notice | warn | error | crit ]
error_log /var/log/nginx/error.log info;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules-enabled/*.conf;

pid /tmp/nginx.pid;

events {
    # Accept simultaneous connections that can be opened by a worker process.
    # https://nginx.org/en/docs/ngx_core_module.html#multi_accept
    multi_accept on;

    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    # "cannot exceed the current limit on the maximum number of open files" (RLIMIT_NOFILE)
    # https://nginx.org/en/docs/ngx_core_module.html#worker_connections
    worker_connections 65535;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable. Default is '1m'.
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write(). Default is off.
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile
    sendfile on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. Default is 'off'.
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#tcp_nopush
    tcp_nopush on;

    # The first parameter sets a timeout during which a keep-alive client
    # connection will stay open on the server side. The zero value disables
    # keep-alive client connections. The optional second parameter sets a value
    # in the “Keep-Alive: timeout=time” response header field. Default is 75s.
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout
    keepalive_timeout 65;

    #tcp_nodelay on;
    #gzip on;

    # https://docs.nginx.com/nginx/admin-guide/monitoring/logging/#enabling-conditional-logging
    map $http_user_agent $is_bot {
         ~^(?:DigitalOcean\ Uptime\ Probe) 1; # e.g. DigitalOcean Uptime Probe 0.22.0 (https://digitalocean.com)
         default                           0;
     }
    # Detect requests to /ping
    map $request_uri $is_ping_route {
        ~^/$    1;
        default 0;
    }
    # Combine conditions to determine if logging is necessary
    map "$is_bot:$is_ping_route" $loggable {
        "1:1"   0; # Don't log if it's a DigitalOcean probe accessing /ping
        default 1; # Log all other cases
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$gzip_ratio"';

    access_log /var/log/nginx/access.log main if=$loggable;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
