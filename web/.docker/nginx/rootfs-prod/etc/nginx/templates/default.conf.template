# https://developer.wordpress.org/advanced-administration/server/web-server/nginx/#global-restrictions-file

# Note: You should disable gzip for SSL traffic.
# See: https://bugs.debian.org/773332

# Read up on ssl_ciphers to ensure a secure configuration.
# See: https://bugs.debian.org/765782

upstream phpfcgi {
  server ${UPSTREAM_SERVER};
}

server {
  # https://nginx.org/en/docs/http/ngx_http_core_module.html#listen
  listen 8080;
  #listen 443 ssl http2;
  #listen 443 http3;
  listen [::]:8080;
  #listen [::]:443 ssl http2;
  #listen [::]:443 http3;

  # https://nginx.org/en/docs/http/ngx_http_core_module.html#root
  root /usr/local/src/app;

  # https://nginx.org/en/docs/http/ngx_http_index_module.html#index
  index index.php;

  # https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name
  server_name _;

  # Onion services
  #add_header Onion-Location http://SITE_URL.onion$request_uri;

  include snippets/security.conf;

  # Limit to selected http methods
  add_header Allow "HEAD, OPTIONS, GET, POST, PUT, PATCH, DELETE" always;
  if ($request_method !~ ^(HEAD|OPTIONS|GET|POST|PUT|PATCH|DELETE)$) {
      return 405;
  }

  # https://stackoverflow.com/a/43954597/4156752

  location / {
    # This is cool because no php is touched for static content.
    # include the "?$args" part so non-default permalinks doesn't break when using query string
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    fastcgi_param SCRIPT_FILENAME /usr/local/src/app$fastcgi_script_name;
    #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
    include fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_pass phpfcgi;
    fastcgi_index index.php;
  }

  # additional config
  include snippets/general.conf;

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\. {
    deny all;
  }

  # Deny access to any files with a .php extension in the uploads directory
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }
}
